{"version":3,"sources":["Skeleton.js","TourPlace.js","ForkMeOnGithub.js","App.js","reportWebVitals.js","index.js"],"names":["Skeleton","className","TourPlace","place","filterPlaces","fetchPlaces","length","map","i","name","price","img","id","src","alt","onClick","ForkMeOnGithubRepo","repo","colorOctocat","colorBackground","side","text","isPride","App","useState","setPlace","loading","setLoading","a","fetch","res","json","data","console","log","useEffect","timeout","setTimeout","clearTimeout","ForkMeOnGithub","items","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAqBeA,G,MAlBE,WACb,OACI,qBAAKC,UAAU,OAAf,SACA,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,yB,OCgChBC,G,MA1CG,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,aAAaC,EAAiB,EAAjBA,YACnC,OACI,8BAEkB,IAAhBF,EAAMG,OACJ,oCACA,oEACA,sBAAKL,UAAU,UAAf,UACI,sBAAMA,UAAU,MAAhB,SAAsB,cAAC,IAAD,MACtB,sBAAMA,UAAU,OAAhB,eACA,sBAAMA,UAAU,SAAhB,SAAyB,cAAC,IAAD,SAG7B,qBAAKA,UAAU,cAClB,qBAAKA,UAAU,eAAf,SAEOE,EAAMI,KAAI,SAACJ,EAAMK,GAAK,IACVC,EAAqBN,EAArBM,KAAKC,EAAgBP,EAAhBO,MAAMC,EAAUR,EAAVQ,IAAIC,EAAMT,EAANS,GACtB,OACI,sBAAaX,UAAU,eAAvB,UACE,qBAAKY,IAAKF,EAAKG,IAAI,KACnB,yBAAQb,UAAU,SAAlB,UACI,oBAAGA,UAAU,aAAb,cAA4BQ,KAC5B,8BAAG,sBAAMR,UAAU,QAAhB,yBAAH,KAAgDS,KAChD,yBAAQK,QAAS,kBAAIX,EAAaQ,IAAlC,4BAAsD,6CALlDJ,WAczB,sBAAKP,UAAU,OAAf,UACK,mBAAGA,UAAU,SAAb,0CACD,wBAAQc,QAAS,kBAAIV,KAArB,+C,gBCrBCW,EAfY,WACvB,OACG,8BACI,cAAC,IAAD,CACKC,KAAK,6BACLC,aAAa,QACbC,gBAAgB,UAChBC,KAAK,OACLC,KAAK,oBACLC,SAAO,OCyCRC,EAhDH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTrB,EADS,KACHsB,EADG,OAEgBD,oBAAS,GAFzB,mBAERE,EAFQ,KAECC,EAFD,KAIVtB,EAAW,uCAAG,8BAAAuB,EAAA,6DAClBD,GAAW,GADO,kBAGEE,MAAM,8DAHR,cAGVC,EAHU,gBAIGA,EAAIC,OAJP,OAIVC,EAJU,OAKhBL,GAAW,GACXF,EAASO,GANO,kDAShBL,GAAW,GACXM,QAAQC,IAAR,MAVgB,0DAAH,qDAajBC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBhC,MACA,KACF,OAAO,kBAAMiC,aAAaF,MAC1B,IAQD,OAAGV,EAEC,cAAC,EAAD,IAKH,gCACE,cAACa,EAAD,IACC,cAAC,EAAD,CACKpC,MAAOA,EACPC,aAjBU,SAACQ,GACnB,IAAM4B,EAAQrC,EAAMsC,QAAO,SAACtC,GAAD,OACzBA,EAAMS,KAAOA,KAEfa,EAASe,IAcDnC,YAAaA,QCnCVqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0ceabaf8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Skeleton.css'\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <div className='wrap'>\r\n        <div className='skeleton'>\r\n            <div className='lines'>\r\n                <div className='line line-1'></div>\r\n                <div className='line line-2'></div>\r\n                <div className='line line-3'></div>\r\n                <div className='line line-4'></div>\r\n                <div className='line line-5'></div>\r\n                <div className='line line-6'></div>\r\n                <div className='line line-7'></div>\r\n            </div>\r\n        </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Skeleton\r\n","import React from 'react'\r\nimport {GiBowman,GiTargetDummy} from 'react-icons/gi'\r\nimport './Tour.css'\r\n\r\nconst TourPlace = ({place,filterPlaces,fetchPlaces}) => {\r\n    return (\r\n        <div>\r\n      {\r\n          place.length !==0 ?(\r\n            <section>\r\n            <h3> Top Visiting Places In Bangladesh</h3>\r\n            <div className='manteer'>\r\n                <span className='man'><GiBowman/></span>\r\n                <span className='teer'>-</span>\r\n                <span className='target'><GiTargetDummy/></span>\r\n                </div>\r\n            \r\n            <div className='underline'></div>\r\n         <div className='wrapperPlace'>\r\n             {\r\n                place.map((place,i)=>{\r\n                     const {name,price,img,id} = place\r\n                     return(\r\n                         <div key={i} className='imgpricename'>\r\n                           <img src={img} alt=''/>\r\n                           <footer className='footer'>\r\n                               <p className='namefooter'> {name}</p>\r\n                               <p><span className='visit'>Visit Cost:</span> ${price}</p>\r\n                               <button onClick={()=>filterPlaces(id)}>Not Interested <span>X</span></button>\r\n                           </footer>\r\n                         </div>\r\n                     )\r\n                 })\r\n             }\r\n         </div>\r\n      </section>\r\n          ) :\r\n          <div className='task'>\r\n               <p className='notask'>No Visiting Places Available</p>\r\n              <button onClick={()=>fetchPlaces()}>Click to Refresh This Page</button>\r\n          </div>\r\n      }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TourPlace\r\n","import React from 'react'\r\nimport ForkMeOnGithub from 'fork-me-on-github';\r\n\r\nconst ForkMeOnGithubRepo = () => {\r\n    return (\r\n       <div>\r\n           <ForkMeOnGithub\r\n                repo=\"https://github.com/ronyfr3\"\r\n                colorOctocat=\"black\"\r\n                colorBackground=\"#bada55\"\r\n                side=\"left\"\r\n                text=\"Fork Me On Github\"\r\n                isPride\r\n                />\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ForkMeOnGithubRepo\r\n","import React, { useEffect, useState } from 'react'\nimport Skeleton from './Skeleton'\nimport TourPlace from './TourPlace'\nimport ForkMeOnGithubRepo from './ForkMeOnGithub'\n\nconst App = () => {\n  const [place,setPlace] =useState([])\n  const [ loading, setLoading ] = useState(true)\n\n  const fetchPlaces = async ()=>{\n    setLoading(true)\n    try {\n      const res = await fetch('https://my-json-server.typicode.com/ronyfr3/db.json/places')\n      const data = await res.json()\n      setLoading(false)\n      setPlace(data)\n\n    } catch (error) {\n      setLoading(false)\n      console.log(error)\n    }\n  }\n  useEffect(()=>{\n    const timeout = setTimeout(()=>{\n      fetchPlaces()\n    },800)\n    return () => clearTimeout(timeout);\n  },[])\n  \n  const filterPlaces =(id)=>{\n    const items = place.filter((place)=>\n      place.id !== id\n    )\n    setPlace(items)\n  }\n   if(loading){\n     return (\n       <Skeleton/>\n     )\n   }\n  \n  return (\n    <div>\n      <ForkMeOnGithubRepo/>\n       <TourPlace \n            place={place}\n            filterPlaces={filterPlaces}\n            fetchPlaces={fetchPlaces}\n            />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}